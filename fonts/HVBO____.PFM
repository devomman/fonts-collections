<?php

namespace WPForms\Admin\Tools\Importers;

/**
 * Ninja Forms Importer class.
 *
 * @since 1.6.6
 */
class NinjaForms extends Base {

	/**
	 * Define required properties.
	 *
	 * @since 1.6.6
	 */
	public function init() {

		$this->name = 'Ninja Forms';
		$this->slug = 'ninja-forms';
		$this->path = 'ninja-forms/ninja-forms.php';
	}

	/**
	 * Get ALL THE FORMS.
	 *
	 * @since 1.6.6
	 *
	 * @return \NF_Database_Models_Form[]
	 */
	public function get_forms() {

		$forms_final = [];

		if ( ! $this->is_active() ) {
			return $forms_final;
		}

		$forms = \Ninja_Forms()->form()->get_forms();

		if ( ! empty( $forms ) ) {
			foreach ( $forms as $form ) {
				if ( ! $form instanceof \NF_Database_Models_Form ) {
					continue;
				}

				$forms_final[ $form->get_id() ] = $form->get_setting( 'title' );
			}
		}

		return $forms_final;
	}

	/**
	 * Get a single form.
	 *
	 * @since 1.6.6
	 *
	 * @param int $id Form ID.
	 *
	 * @return array
	 */
	public function get_form( $id ) {

		$form             = [];
		$form['settings'] = \Ninja_Forms()->form( $id )->get()->get_settings();
		$fields           = \Ninja_Forms()->form( $id )->get_fields();
		$actions          = \Ninja_Forms()->form( $id )->get_actions();

		foreach ( $fields as $field ) {
			if ( ! $field instanceof \NF_Database_Models_Field ) {
				continue;
			}

			$form['fields'][] = array_merge(
				[
					'id' => $field->get_id(),
				],
				$field->get_settings()
			);
		}

		foreach ( $actions as $action ) {
			if ( ! $action instanceof \NF_Da